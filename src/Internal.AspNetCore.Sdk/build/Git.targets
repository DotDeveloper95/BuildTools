<Project>

  <PropertyGroup>
    <GenerateCommitHashAttribute Condition="'$(GenerateCommitHashAttribute)'==''">true</GenerateCommitHashAttribute>
    <GeneratedCommitHashAttributeFile Condition="'$(GeneratedCommitHashAttributeFile)'==''">$(IntermediateOutputPath)$(AssemblyName).CommitHash$(DefaultLanguageSourceExtension)</GeneratedCommitHashAttributeFile>
    <SourceLinkDestination Condition="'$(SourceLinkDestination)' == ''">$(IntermediateOutputPath)sourcelink.json</SourceLinkDestination>
    <GenerateSourceLinkFile Condition="'$(GenerateSourceLinkFile)' == '' AND '$(IsPackable)' != 'false'">true</GenerateSourceLinkFile>
    <!--
      The source root path used for deterministic normalization of source paths.

      If set the value is used in PathMap to instruct the compiler to normalize source paths
      emitted to the binary and PDB and as a root for Source Link mapping.
      If set must end with a directory separator.

      The path can't be just a single '/' due to bug in Roslyn compilers:
      https://github.com/dotnet/roslyn/issues/22815.

      Only set this in CI builds, otherwise it will mess up the debugger.
    -->
    <DeterministicSourceRoot Condition=" '$(CI)' == 'true' ">/_/</DeterministicSourceRoot>

    <SourceLinkRoot Condition="'$(DeterministicSourceRoot)' != ''">$(DeterministicSourceRoot)</SourceLinkRoot>
    <SourceLinkRoot Condition="'$(SourceLinkRoot)' == ''">$([MSBuild]::NormalizeDirectory($(RepositoryRoot)))</SourceLinkRoot>

    <PathMap Condition=" '$(DeterministicSourceRoot)' != '' ">$(RepositoryRoot)=$(DeterministicSourceRoot)</PathMap>
  </PropertyGroup>

  <Target Name="ResolveCommitHash" Condition="'$(CommitHash)'==''">

    <PropertyGroup>
      <CommitHash Condition="'$(APPVEYOR_REPO_COMMIT)' != ''">$(APPVEYOR_REPO_COMMIT)</CommitHash>
      <CommitHash Condition="'$(TRAVIS_COMMIT)' != ''">$(TRAVIS_COMMIT)</CommitHash>
    </PropertyGroup>

    <Sdk_GetGitCommitHash WorkingDirectory="$(MSBuildProjectDirectory)"
                      Condition="'$(CommitHash)' == ''"
                      ContinueOnError="WarnAndContinue">
      <Output TaskParameter="CommitHash" PropertyName="CommitHash" />
    </Sdk_GetGitCommitHash>
  </Target>

  <Target Name="CreateSourceLink"
          Condition="'$(SourceLink)'=='' AND '$(GenerateSourceLinkFile)' != 'false' "
          Inputs="$(IntermediateCommitHash);$(MSBuildAllProjects)"
          Outputs="$(SourceLinkDestination)" >

    <Sdk_CreateSourceLink
          SourceLinkRoot="$(SourceLinkRoot)"
          OriginUrl="$(RepositoryUrl)"
          Commit="$(CommitHash)"
          DestinationFile="$(SourceLinkDestination)"
          ContinueOnError="WarnAndContinue"
          Condition="'$(CommitHash)' != '' AND '$(RepositoryUrl)' != '' AND '$(SourceLinkRoot)' != ''">
      <Output TaskParameter="SourceLinkFile" PropertyName="SourceLink" />
    </Sdk_CreateSourceLink>

    <Warning Text="SourceLink not enabled because RepositoryUrl wasn't set."
             Condition="'$(RepositoryUrl)' == ''" />

    <Warning Text="SourceLink not enabled because this is not a git repo."
             Condition="'$(CommitHash)' == ''" />

    <Warning Text="SourceLink not enabled because SourceLinkRoot wasn't set."
             Condition="'$(SourceLinkRoot)' == ''" />
  </Target>

<!--
********************************************************************************************
Target: GenerateCommitHashAttribute
Generates an assembly attribute with commit hash
********************************************************************************************
-->
  <Target Name="GenerateCommitHashAttribute"
          BeforeTargets="CoreCompile"
          DependsOnTargets="ResolveCommitHash;PrepareForBuild;GenerateIntermediateCommitHash;CoreGenerateCommitHashAttribute;CreateSourceLink"
          Condition="'$(GenerateCommitHashAttribute)'=='true' and '$(DesignTimeBuild)'!='true'" >
    <Warning Text="Property 'CommitHash' was not set"
             Condition="'$(CommitHash)'==''" />
  </Target>

  <Target Name="GenerateIntermediateCommitHash" Condition="'$(CommitHash)' != ''">
    <PropertyGroup>
      <!-- shorten to help avoid max path length issues -->
      <IntermediateCommitHash>$(IntermediateOutputPath)$(CommitHash.Substring(0, 10)).commit</IntermediateCommitHash>
    </PropertyGroup>

    <ItemGroup>
      <_OldCommitFiles Include="$(IntermediateOutputPath)*.commit" Exclude="$(IntermediateCommitHash)" />
    </ItemGroup>

    <Delete Files="@(_OldCommitFiles)" />
    <Touch Files="$(IntermediateCommitHash)" AlwaysCreate="true" Condition="!Exists('$(IntermediateCommitHash)')" />
  </Target>

  <Target Name="CoreGenerateCommitHashAttribute"
          Condition="'$(CommitHash)'!='' and '$(GenerateCommitHashAttribute)'=='true'"
          Inputs="$(IntermediateCommitHash)"
          Outputs="$(GeneratedCommitHashAttributeFile)">

    <ItemGroup>
      <_CustomAttributes Remove="@(_CustomAttributes)" />
      <_CustomAttributes Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitHash</_Parameter1>
        <_Parameter2>$(CommitHash)</_Parameter2>
      </_CustomAttributes>
    </ItemGroup>

    <WriteCodeFragment AssemblyAttributes="@(_CustomAttributes)" Language="$(Language)" OutputFile="$(GeneratedCommitHashAttributeFile)">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>

    <Message Importance="normal" Text="Generated commit hash attribute file $(GeneratedCommitHashAttributeFile)" />
  </Target>

</Project>
