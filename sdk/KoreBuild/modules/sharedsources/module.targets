<!--
###################################################################
Target: PackSharedSources

Creates a content files package for all each directory in
that matches "$(RepositoryRoot)/shared/*.Sources".
###################################################################
-->
<Project>
  <PropertyGroup>
    <PackageDependsOn>$(PackageDependsOn);PackSharedSources</PackageDependsOn>
    <GetArtifactInfoDependsOn>$(GetArtifactInfoDependsOn);ResolveSharedSourcesPackageInfo</GetArtifactInfoDependsOn>
  </PropertyGroup>

  <Target Name="PackSharedSources">
    <MSBuild Targets="Restore;Pack"
      Projects="$(MSBuildThisFileDirectory)sharedsources.csproj"
      Properties="$(_SharedSourcesPackageProperties);NuspecBasePath=%(SharedSourceDirectories.Identity);PackageId=%(FileName)%(Extension);BuildNumber=$(BuildNumber)"
      Condition="@(SharedSourceDirectories->Count()) != 0"
      BuildInParallel="true" />
  </Target>

  <Target Name="ResolveSharedSourcesPackageInfo" Returns="@(ArtifactInfo)">
    <MSBuild Targets="GetArtifactInfo"
      Projects="$(MSBuildThisFileDirectory)sharedsources.csproj"
      Properties="$(_SharedSourcesPackageProperties);NuspecBasePath=%(SharedSourceDirectories.Identity);PackageId=%(FileName)%(Extension);BuildNumber=$(BuildNumber)"
      Condition="@(SharedSourceDirectories->Count()) != 0"
      BuildInParallel="true">
      <Output TaskParameter="TargetOutputs" ItemName="ArtifactInfo" />
    </MSBuild>
  </Target>

  <Target Name="_SetSharedSourcesProperties">
    <PropertyGroup>
      <_SharedSourcesPackageProperties>PackageOutputPath=$(BuildDir);RepositoryRoot=$(RepositoryRoot);BuildNumber=$(BuildNumber);</_SharedSourcesPackageProperties>
    </PropertyGroup>
  </Target>

</Project>
